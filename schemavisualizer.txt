-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ads (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  code text NOT NULL,
  active boolean NOT NULL DEFAULT true,
  position text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ads_pkey PRIMARY KEY (id)
);
CREATE TABLE public.affiliate_payouts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  affiliate_id uuid NOT NULL,
  amount numeric NOT NULL,
  currency text NOT NULL,
  wallet_address text NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::payout_status,
  processed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  processed_at timestamp with time zone,
  CONSTRAINT affiliate_payouts_pkey PRIMARY KEY (id),
  CONSTRAINT affiliate_payouts_affiliate_id_fkey FOREIGN KEY (affiliate_id) REFERENCES public.affiliates(id),
  CONSTRAINT affiliate_payouts_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.affiliate_referrals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  affiliate_id uuid NOT NULL,
  referred_user_id uuid,
  subscription_id text,
  commission_amount numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT affiliate_referrals_pkey PRIMARY KEY (id),
  CONSTRAINT affiliate_referrals_affiliate_id_fkey FOREIGN KEY (affiliate_id) REFERENCES public.affiliates(id),
  CONSTRAINT affiliate_referrals_referred_user_id_fkey FOREIGN KEY (referred_user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.affiliates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  affiliate_code text NOT NULL UNIQUE,
  promotion_plan text NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::affiliate_status,
  total_earnings numeric NOT NULL DEFAULT 0,
  pending_earnings numeric NOT NULL DEFAULT 0,
  btc_address text,
  usdt_address text,
  created_at timestamp with time zone DEFAULT now(),
  approved_at timestamp with time zone,
  auto_approve_at timestamp with time zone,
  CONSTRAINT affiliates_pkey PRIMARY KEY (id),
  CONSTRAINT affiliates_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.chat_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  message text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.chat_rate_limits (
  user_id uuid NOT NULL,
  last_message_at timestamp with time zone DEFAULT now(),
  message_count integer DEFAULT 0,
  CONSTRAINT chat_rate_limits_pkey PRIMARY KEY (user_id),
  CONSTRAINT chat_rate_limits_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.email_campaigns (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  subject text NOT NULL,
  body text NOT NULL,
  target_audience text,
  sent_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT email_campaigns_pkey PRIMARY KEY (id),
  CONSTRAINT email_campaigns_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.friend_invitations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  from_user_id uuid NOT NULL,
  to_email text NOT NULL,
  invited_user_id uuid,
  bonus_claimed boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT friend_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT friend_invitations_from_user_id_fkey FOREIGN KEY (from_user_id) REFERENCES public.profiles(id),
  CONSTRAINT friend_invitations_invited_user_id_fkey FOREIGN KEY (invited_user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.friends (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  friend_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT friends_pkey PRIMARY KEY (id),
  CONSTRAINT friends_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT friends_friend_id_fkey FOREIGN KEY (friend_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.game_scores (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  score integer NOT NULL,
  difficulty USER-DEFINED NOT NULL,
  points_earned integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT game_scores_pkey PRIMARY KEY (id),
  CONSTRAINT game_scores_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.points_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  points integer NOT NULL,
  source text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT points_history_pkey PRIMARY KEY (id),
  CONSTRAINT points_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  username text NOT NULL UNIQUE,
  email text NOT NULL,
  country_code text NOT NULL,
  region USER-DEFINED NOT NULL,
  membership_tier USER-DEFINED NOT NULL DEFAULT 'free'::membership_tier,
  stripe_customer_id text,
  stripe_subscription_id text,
  subscription_ends_at timestamp with time zone,
  lives integer NOT NULL DEFAULT 4,
  max_lives integer NOT NULL DEFAULT 100,
  last_life_regen timestamp with time zone DEFAULT now(),
  lives_per_hour integer NOT NULL DEFAULT 4,
  lifetime_level integer NOT NULL DEFAULT 1,
  lifetime_points integer NOT NULL DEFAULT 0,
  last_30_days_points integer NOT NULL DEFAULT 0,
  current_rank USER-DEFINED NOT NULL DEFAULT 'blue'::rank_tier,
  high_score_easy integer NOT NULL DEFAULT 0,
  high_score_medium integer NOT NULL DEFAULT 0,
  high_score_hard integer NOT NULL DEFAULT 0,
  profile_picture_url text,
  profile_public boolean NOT NULL DEFAULT true,
  social_link text,
  social_platform text,
  message_to_world text,
  allow_friend_requests boolean NOT NULL DEFAULT true,
  is_admin boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.rank_thresholds (
  rank USER-DEFINED NOT NULL,
  points_required integer NOT NULL,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT rank_thresholds_pkey PRIMARY KEY (rank)
);
CREATE TABLE public.system_settings (
  key text NOT NULL,
  value text NOT NULL,
  description text,
  updated_at timestamp with time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT system_settings_pkey PRIMARY KEY (key),
  CONSTRAINT system_settings_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.profiles(id)
);